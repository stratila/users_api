stages:
  - build
  - push

build_image:
  image: google/cloud-sdk:latest
  stage: build
  services:
    - docker:dind
  script:
    # Set environment variables
    - docker --version
    
    - export PROJECT_ID=modular-granite-374519
    - export REGION=us-central1
    - export REPO_NAME=users-docker-repo
    - export IMAGE_TAG=usersapi
    
    # Authenticate to GCP Artifact Registry
    - echo ${GOOGLE_APPLICATION_CREDENTIALS} | base64 -d > /tmp/gcp-key.json
    - gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
    - gcloud auth configure-docker ${REGION}-docker.pkg.dev
    
    # Build the Docker image with Google Artifact Registry format
    - docker build -t ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_TAG}:$CI_COMMIT_SHA .
  
  tags:
    - docker

push_image:
  image: google/cloud-sdk:latest
  stage: push
  services:
    - docker:dind
  script:
    # Set environment variables
    - export PROJECT_ID=modular-granite-374519
    - export REPO_NAME=users-docker-repo
    - export IMAGE_TAG=usersapi
    
    # Authenticate to GCP Artifact Registry
    - echo ${GOOGLE_APPLICATION_CREDENTIALS} | base64 -d > /tmp/gcp-key.json
    - gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
    - gcloud auth configure-docker ${REGION}-docker.pkg.dev
    
    # Push the image to GCP Artifact Registry
    - docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_TAG}:$CI_COMMIT_SHA
  
  tags:
    - docker
