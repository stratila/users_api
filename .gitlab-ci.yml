stages:
  - stat
  - build
  - test
  - push

shared_runner_stats:
  stage: stat
  image: "ubuntu:latest"
  script:
    - free -m | grep -v "Swap" # RAM
    - df -h| grep -E "Filesystem|overlay" # storage
    - lscpu | grep -E "^CPU\(s\)" # CPUs


build_image:
  image: docker:20
  stage: build
  services:
    - docker:dind
  script:
    - export IMAGE_TAG=users-api
    
    # Build the Docker image with Google Artifact Registry format
    - docker build -t $CI_REGISTRY_IMAGE/${IMAGE_TAG}:${CI_COMMIT_SHA} .
    
    # Push the Docker image to the GitLab registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/${IMAGE_TAG}:${CI_COMMIT_SHA}
  
  tags:
    - docker

# Define job for running tests and database migrations
integration_tests:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker-compose -f docker-compose.yaml up --detach
    - docker-compose -f docker-compose.yaml exec --no-TTY --workdir /tests web /bin/sh -c "/scripts/migrate.sh; pytest -vvv"
    - docker-compose -f docker-compose.yaml down
  tags:
    - docker

push_image:
  image: docker:20
  stage: push
  services:
    - docker:dind
  script:
    # Set environment variables
    - export PROJECT_ID=modular-granite-374519
    - export REGION=us-central1
    - export REPO_NAME=users-docker-repo
    - export IMAGE_TAG=users-api
    
    # Authenticate to GCP Artifact Registry
    - echo ${GOOGLE_APPLICATION_CREDENTIALS} | base64 -d > /tmp/gcp-key.json
    - docker login -u _json_key --password-stdin https://${REGION}-docker.pkg.dev < /tmp/gcp-key.json
    
    # Pull the Docker image from the GitLab registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/${IMAGE_TAG}:${CI_COMMIT_SHA}
    
    # Tag the Docker image with the GCP Artifact Registry format
    - docker tag $CI_REGISTRY_IMAGE/${IMAGE_TAG}:${CI_COMMIT_SHA} ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_TAG}:$CI_COMMIT_SHA
    
    # Push the Docker image to GCP Artifact Registry
    - docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_TAG}:$CI_COMMIT_SHA
  
  tags:
    - docker
